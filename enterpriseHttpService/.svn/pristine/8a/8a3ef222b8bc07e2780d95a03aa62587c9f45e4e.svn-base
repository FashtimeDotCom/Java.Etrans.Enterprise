package com.etrans.bubiao.action;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang.StringUtils;
import org.apache.struts2.convention.annotation.Action;
import org.apache.struts2.convention.annotation.Namespace;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.etrans.bubiao.entities.Result;
import com.etrans.bubiao.services.IbatisService;
import com.etrans.bubiao.sys.Constants;
import com.etrans.common.util.json.JSONUtil;

@SuppressWarnings("serial")
@Controller
@Scope("prototype")
@Namespace("/httpService")
public class HttpServiceAction extends BaseAction implements HttpServiceSupport
{
   
	private String jsonParam;

	@Autowired(required = true)
	private IbatisService ibatisService;
	 
	 /**
		 * 描述：调用存储过程
		 * 其中tableName表示的是ibatis查询id
		 * @author lihaiyan
		 * @since Create on 2012-2-14
		 * @version Copyright (c) 2012 by e_trans.
		 */
		@Override
		@SuppressWarnings("unchecked")
		@Action("EHCallProcedure")
	 public void EHCallProcedure()  throws Exception{
		Map<String, Object> mapJsonParams = this.getJsonParam();
		Result result=new Result();
		if(mapJsonParams==null){
			result.setCode(3);
			result.setMsg("jsonParam为空");
			this.renderJSON(result);
		}
		String tableName =(String)mapJsonParams.get(Constants.TABLE_NAME);
		Map<String,Object> mapSetParam=(Map<String,Object>)mapJsonParams.get(Constants.SET_PARAM);
		 if(StringUtils.isEmpty(tableName)){
			 result.setCode(3);
				result.setMsg("tableName为空");
				this.renderJSON(result);
		 }else {
			try
			{   
				 List<HashMap<String,String>> rows=this.ibatisService.callProcedure(tableName, mapSetParam);
				 result.setData(rows);
				 result.setCode(0);
				 String jsonResult=JSONUtil.toJson(result);
				 this.renderJSON(jsonResult);
			} catch (Exception e)
			{
				e.printStackTrace();
				result.setCode(1);
				result.setMsg(e.getMessage());
				this.renderJSON(result);
			}
		}
	 }
		
		
		 
		 /**
			 * 描述：调用存储过程
			 * 其中tableName表示的是ibatis查询id
			 * @author lihaiyan
			 * @since Create on 2012-2-14
			 * @version Copyright (c) 2012 by e_trans.
			 */
			@SuppressWarnings("unchecked")
			@Action("test")
		 public void getTest()  throws Exception{
				 List<HashMap<String,String>> rows=this.ibatisService.callProcedure("test", null);
				 this.renderJSON(rows);
		 }
		
		

		
	@SuppressWarnings("unchecked")
	private Map<String,Object> getJsonParam()
	{
		return JSONUtil.fromJson(this.jsonParam, Map.class);
	}

	public void setJsonParam(String jsonParam)
	{
		this.jsonParam = jsonParam;
	}


	
	public static void main(String[] args){
		String jsonString="{\"tableName\":\"MSC_MSCConfigure\",\"setParam\":[{\"mscname\":\"test11\",\"mschost\":\"127.0.0.1\",\"mscport\":8},{\"mscname\":\"test12\",\"mschost\":\"127.0.0.1\",\"mscport\":88},{\"mscname\":\"test13\",\"mschost\":\"127.0.0.1\",\"mscport\":88}]}";
	     Map<String, Object> test=JSONUtil.fromJson(jsonString, Map.class);
	}
	
	
	
	
   
	
}
