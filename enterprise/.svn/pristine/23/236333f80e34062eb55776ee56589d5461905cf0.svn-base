package com.etrans.common.util;
/** 
 * 行驶记录仪数据采集命令
 * @author Pomelo(柚子.)  
 * @version 1.0
 * @since 创建时间：2013-7-31 下午4:27:54 
 */
public class Command1792Util {
	/**
	 * 起始字头
	 */
	private String starCode;
	/**
	 * 命令字
	 */
	private String commandCode;
	/**
	 * 数据块长度
	 */
	private int dataLength;
	/**
	 * 保留字
	 */
	private String reserved;
	/**
	 * 数据块
	 */
	private String data;
	/**
	 * 效验字节
	 */
	private String efficacy;
		
	/**
	 * 构造
	 * 
	 * @param str
	 */
	public Command1792Util(String str){
		/**
		 * 按照标准协议进行截取
		 */
		setStarCode(str.substring(0, 4));
		setCommandCode(str.substring(4, 6));
		setDataLength(ByteUtil.hexStringtoDecimal(str.substring(6, 10)));
		setReserved(str.substring(10, 12));
		setData(str.substring(12, 12+(getDataLength()*2)));
		setEfficacy(str.substring(str.length()-2, str.length()));
	}
	
	public String getStarCode() {
		return starCode;
	}
	public void setStarCode(String starCode) {
		this.starCode = starCode;
	}
	public String getCommandCode() {
		return commandCode;
	}
	public void setCommandCode(String commandCode) {
		this.commandCode = commandCode;
	}
	public int getDataLength() {
		return dataLength;
	}
	public void setDataLength(int dataLength) {
		this.dataLength = dataLength;
	}
	public String getReserved() {
		return reserved;
	}
	public void setReserved(String reserved) {
		this.reserved = reserved;
	}
	public String getData() {
		return data;
	}
	public void setData(String data) {
		this.data = data;
	}
	public String getEfficacy() {
		return efficacy;
	}
	public void setEfficacy(String efficacy) {
		this.efficacy = efficacy;
	}
	
	public static void main(String[] args){
		String s = new Command1792UtilparseData();
		System.out.println(s);
	}
	/**
	 * 解析数据,提取有用数据
	 * 
	 * @return String
	 */
	public String parseData(){
		if(commandCode.equals("01")){
			return "驾驶员代码:"+ByteUtil.hexStringtoDecimal(data.substring(0,6))+"  机动车驾驶证号码:" +ByteUtil.decode(data.substring(6));
		}
		if(commandCode.equals("02")){
			return "20"+data.substring(0,2)+"-"+data.substring(2,4)+"-"+data.substring(4,6)+" "+data.substring(6,8)+":"+data.substring(8,10)+":"+data.substring(10,12);
		}
		if(commandCode.equals("03")){
			return "累计行程里程值:"+Float.valueOf(data.substring(0,6))/10+"(Km)  数据读出时间:" +"20"+data.substring(6,8)+"-"+data.substring(8,10)+"-"+data.substring(10,12)+" "+data.substring(12,14)+":"+data.substring(14,16);
		}
		if(commandCode.equals("04")){
//			return Integer.toString(ByteUtil.hexStringtoDecimal(data));
			return "数据格式错误:"+data;
		}
		if(commandCode.equals("05")){
			return "数据格式错误:"+data;
//			return "速度数据记录时间:" +"20"+data.substring(0,2)+"-"+data.substring(2,4)+"-"+data.substring(4,6)+" "+data.substring(6,8)+":"+data.substring(8,10)+"  行驶速度:"+ByteUtil.hexStringtoDecimal(data.substring(10));
		}
		if(commandCode.equals("06")){
			return "车辆VIN号:"+ByteUtil.decode(data.substring(0,34))+" 车辆号码:"+ByteUtil.toStringHex(data.substring(34,52))+" 车牌分类:"+ByteUtil.toStringHex(data.substring(58,74));
		}
		if(commandCode.equals("07")){
			//return null;
			return "数据格式错误:"+data;
		}
		if(commandCode.equals("08")){
			return "累计行程里程值:"+Float.valueOf(data.substring(0,6))/10+"(Km)  数据读出时间:" +"20"+data.substring(6,8)+"-"+data.substring(8,10)+"-"+data.substring(10,12)+" "+data.substring(12,14)+":"+data.substring(14,16);
		}
		if(commandCode.equals("09")){
//			int recoderLength = getDataLength()/6; 
//			StringBuffer sb = new StringBuffer();
//			for(int i=0;i<recoderLength;i++){
//				String nData = data.substring(i*12,i*12+12);
//				sb.append("记录时间:"+"20"+nData.substring(0,2)+"-"+nData.substring(2,4)+"-"+nData.substring(4,6)+" "+nData.substring(6,8)+":"+nData.substring(8,10)+" 速度:"+Float.valueOf(nData.substring(10,12))+"(Km)");
//				sb.append("<br>");
//			}
//			return sb.toString();
			return "数据格式错误:"+data;
		}
		if(commandCode.equals("10")){
//			return null;
			return "数据格式错误:"+data;
		}
		if(commandCode.equals("11")){
//			String driverLisence = ByteUtil.toStringHex(data.substring(0,36));
//			int recoderLength = (getDataLength()-18)/10;
//			StringBuffer sb = new StringBuffer();
//			sb.append(driverLisence).append("<br>");
//			for(int i=0;i<recoderLength;i++){
//				String nData = data.substring(36+i*20,(36+i*20)+20);
//				sb.append("超时开始时间:"+"20"+nData.substring(0,2)+"-"+nData.substring(2,4)+"-"+nData.substring(4,6)+" "+nData.substring(6,8)+":"+nData.substring(8,10)+
//						"超时结束时间:"+"20"+nData.substring(10,12)+"-"+nData.substring(12,14)+"-"+nData.substring(14,16)+" "+nData.substring(16,18)+":"+nData.substring(18,20));
//				sb.append("<br>");
//			}
//			return sb.toString();
			return "数据格式错误:"+data;
		}
		return "数据格式错误:"+data;
	}
}

