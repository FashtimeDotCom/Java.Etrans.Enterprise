var maplet= null;   // 地图全局变量
var vehicleId ="";// 手机号
var car = new MyObject('0'); //
var carText = new MyObject('0'); //
var carHashMap = new HashMap();
var winHashMap = new HashMap();
var pointHashMap = new HashMap();//自定义信息map
var lableHashMap = new HashMap();//自定义信息map

var styleOptions = {
	    strokeColor: "red",    //边线颜色。
	    fillColor: "red",      //填充颜色。当参数为空时，圆形将没有填充效果。
	    strokeWeight: 3,       //边线的宽度，以像素为单位。
	    strokeOpacity: 0.8,    //边线透明度，取值范围0 - 1。
	    fillOpacity: 0.5,      //填充的透明度，取值范围0 - 1。
	    strokeStyle: 'solid' //边线的样式，solid或dashed。
	};

function load(vehicle) {
	vehicleId = vehicle; // 接收页面传来的参数
//	$('#map').css("width", getMapWidth() + "px");
	$('#map').css("height", getMapHeight()+ "px");
	maplet = new BMap.Map("map");            // 创建Map实例
	var point = new BMap.Point(116.39885,39.96571);    // 创建点坐标
	maplet.centerAndZoom(point,16);                     // 初始化地图,设置中心点坐标和地图级别。
	maplet.enableScrollWheelZoom();                            //启用滚轮放大缩小
	maplet.addControl(new BMap.NavigationControl());
	maplet.addControl(new BMap.ScaleControl());  
	maplet.addControl(new BMap.OverviewMapControl());   
	playTrack();
	showPoint();
}


function getHead(head) {
//	head=head*2;
	head=head;
	if ((head >= 0 && head < 22) || (head >= 336)){
		return 3;
		}else if (head >=22 && head <66){
			return 7;
		}else if (head >=66 && head <112){
			return 1;
	    }else if (head >=112 && head <=156){
			return 8;
	    }else if (head >=156 && head <202){
			return 4;
	    }else if (head >=202 && head <= 246){
			return 5;
	    }else if (head >=246 && head <292){
			return 2;
	    }else if (head >=292 && head <336){
			return 6;
	    }
}

function getHeadDes(head) {
//	head=head*2;
	head=head;
	if ((head >= 0 && head < 22)||(head >= 336)){
		return "北";
	}else if(head >= 22 && head <66){
		return "东北";
	}else if(head>=66&&head<112){
		return "东";
	}else if(head>=112&&head<156){
		return "东南";
	}else if(head>=156&&head<202){
		return "南";
	}else if(head>=202&&head<246){
		return "西南";
	}else if(head>=246&&head<292){
		return "西";
	}else if(head>=292&&head<336){
		return "西北";
	}
}

function getMapWidth() {
	var width;
	if (window.innerWidth)
		width = window.innerWidth;
	else
		width = document.body.offsetWidth;

	return width;
}
function getMapHeight() {
	var height;
	height = document.body.clientHeight;
	return height;
}

function createInfoWindow(obCar) {
	var div = '<div><table width="280" border="0px" cellspacing="0" cellpadding="0">';
	div+='<tr width="100%" bgcolor="#e6eaea"><td height="18" colspan="2" >定位时间：'+obCar.gt+'</td></tr>';
	div +=  '<tr  width="100%"  height="30"><td colspan="2" height="25">' + obCar.gs + '</td></tr>' 
	    + '<tr width="100%" ><td height="18">速度：' + obCar.sd + 'km/h</td>' + '<td >方向：' + getHeadDes(obCar.hd) + '</td></tr>'
	  //  + '<tr bgcolor="#e6eaea"><td height="18">经度：' + obCar.lon+ '</td>' + '<td >纬度：' + obCar.lat + '</td></tr>' 
	   + '<tr width="100%" bgcolor="#e6eaea"><td height="18">所属行业：' + obCar.kindName+ '</td>' + '<td >所属业户：' + obCar.workunitName + '</td></tr>'  
	   + '<tr width="100%" ><td height="18" colspan="2" >电子运单：' + obCar.bill+ '</td></tr>'                                                                                                                                                                                                 
	    +'<tr width="100%" bgcolor="#e6eaea"><td><a href="javascript:void(0)" onclick=getDriverMessage("'+obCar.vehicleId+ '")> 查看司机信息</a></td><td><a href="javascript:void(0)" onclick=getLocationInfo2("' + obCar.sim + '","' + obCar.sHlon + '","' + obCar.sHlat + '")>显示位置</a></td></tr>'
	   +'<tr  width="100%" ><td colspan="2"  height="30" id="message">&nbsp;</td></tr></table></div>';
	return div;
}




//弹出窗口,取中文地址
function getLocationInfo2(sim,lon,lat) {
	//百度取中文地址
	$("#locationInfo").html('<img src="imgs/load.gif" />正在加载数据......');
	var gc = new BMap.Geocoder();    
	var pt= new BMap.Point(lon,lat);
	gc.getLocation(pt, function(rs){
        var addComp = rs.addressComponents;
        $("#message").html(addComp.province + ", " + addComp.city + ", " + addComp.district + ", " + addComp.street + ", " + addComp.streetNumber);
    }); 
	
	
	
	//百度取中文地址http接口
//	$("#locationInfo").html('<img src="imgs/load.gif" />正在加载数据......');
//	  var url="monitorCenter/getBaiduAddressSH.action";
//	   var param={
//    		 date:new Date(),
//             lnglat:lon+","+lat	 
//             }
//	  url = encodeURI(url); 
//	 	$.ajax({
//		url:url,
//		type:"POST",
//		dataType:"json",
//		data: param,
//		success:function(data){
//		try{  
//			   if(data.status=="OK"){
//					$("#message").html(data.result.formatted_address);
//				}else{
//					$("#message").html(data.result.error);
//				}
//	     }catch(exception){
//	    	 $("#message").html('服务器忙,请稍后再试!');
//	   }
//		
//	} 
//		
//	});
	

}
/**
 * 获取车辆最新驾驶员信息
 * @param {} vehicleId
 */
function getDriverMessage(vehicleId){
$("#message").html('<img src="imgs/load.gif" />正在加载数据......');
   var jsonParams = {
		vehicleId : vehicleId,
		de : new Date()
	};
	
	 	$.ajax({
		url:"monitorCenter/getNewestDriverMessage.action",
		type:"POST",
		data: jsonParams,
		success: function(data){
		    if (data != ''&&data!='null'&& data!=null) {
		    	var name=data.name;//司机姓名
		    	var driverIC=data.driverIC;//司机IC卡号
		    	var drivingLicence=data.drivingLicence;//驾驶证号码
		    	var zdDriverCode=data.zdDriverCode;//司机编号
		    	//var zdWhetherIC=data.zdWhetherIC;//终端是否插入IC卡
		    	
		    	var message="姓名:"+(!data.name?"":data.name);

		    	 if(drivingLicence!=''){         
				    	message+="&nbsp;驾驶证号:"+(!drivingLicence?"":drivingLicence);
				 }
		    	 
			    if(driverIC!=''){
			    	message+="&nbsp;IC卡号:"+(!driverIC?"":driverIC);
			    }
			   
			    if(zdDriverCode!=''){         
			    	message+="&nbsp;司机编号:"+(!zdDriverCode?"":zdDriverCode);
			    }
//			    if(zdWhetherIC!=''){
//				    message+="&nbsp;终端是否插入IC卡:"+zdWhetherIC;
//				}
		        $("#message").html(message);
		}else{
			$("#message").html("当前没有司机信息");
		  }
		}
		
	});
	
} 
// 删车
function oneCar(carsim) {
	car = new MyObject(carsim);	
	var newMarker = carHashMap.get(car);	
	
	// 清空地图图标
	if(newMarker!=null){
		maplet.removeOverlay(newMarker);// 删除车
	}
	// 清空HashMap
	carHashMap.remove(car); // 删除车
}


// 定位车辆
function MakerCar(obCar, tableFlag) {
	var state = 0;
	var head = getHead(obCar.hd);
	if (obCar.sd > 0) {
		state = 1;
	}
	car = new MyObject(obCar.vehicleId);
	var IconPath;
	var IconInfo;
	var icon;
	var w;
	var h;
	var src;

	var newMarker = "";
	var textMarker = "";
	var infoWindow="";
	try {
		if (!carHashMap.containsKey(car)) {
			if (tableFlag) {
				add_tables(obCar);
			}
		} else {
			oneCar(obCar.vehicleId);
			if (tableFlag) {
				updatetable(obCar);
			}
		}
		if (state == 0) {
			src = "imgs/car/carYellow" + head + ".gif";
		} else if (state == 1) {
			src = "imgs/car/car" + head + ".gif";
		} else if (state == 2) {
			src = "imgs/car/carBlue" + head + ".gif";
		} else {
			src = "imgs/car/red" + head + ".gif";
		}
		//报警状态字字符串
		var alarmStateStr = (!obCar.alarmState?"":obCar.alarmState);
		if(alarmStateStr!=""&&alarmStateStr!="当前没有报警"){//车辆报警了
			src = "imgs/car/red" + head + ".gif";
		}
		try {
			if (head == 1 || head == 2) {
				w = 20;
				h = 20;
				icon = new BMap.Icon(src, new BMap.Size(w,h), {anchor: new BMap.Size(10,10)});
			} else if (head == 3 || head == 4) {
				w = 20;
				h = 20;
				icon = new BMap.Icon(src, new BMap.Size(w,h), {anchor: new BMap.Size(10,10)});
				
			} else {
				w = 22;
				h = 22;
				icon = new BMap.Icon(src, new BMap.Size(w,h), {anchor: new BMap.Size(10,10)});
			}
		} catch (e) {

		}
		var point = new BMap.Point(obCar.sHlon, obCar.sHlat);
		var newObCar = new Object();
		var infowindow = createInfoWindow(obCar);
		newMarker= new BMap.Marker(point, {icon: icon});
		maplet.addOverlay(newMarker);
		
		/**********弹出框begin**********/
		newMarker.addEventListener("click", function(){
			/**设置快捷标题**/
			var windowTitle = {title : getTitleDiv(obCar.no,vehicleId,2)};
			infoWindow = new BMap.InfoWindow( createInfoWindow(obCar),windowTitle);  // 创建信息窗口对象  
//			maplet.openInfoWindow(infoWindow, point);
			this.openInfoWindow(infoWindow, point);
			//setTimeout("getLocationInfo2("+obCar.sim+","+obCar.lon+","+obCar.lat+")",500);
			setTimeout("getLocationInfo2("+obCar.sim+","+obCar.sHlon+","+obCar.sHlat+")",500);
		});
		/**********弹出框end**********/		
	} catch (e) {
		newMarker = car;
	}
	carHashMap.put(car, newMarker);
	winHashMap.put(car, infoWindow);
	// 清空
	point = null;
	car = null;
	carMarker = null;

}

var lastPoint=null;
var firstPoint=true;
//播放轨迹
var posline = new Array(); 
function playTrack() {
	var jsonParams = {
			vehicleIdStr:vehicleId,
			mapType:parent.parent.mapFrame.getMapType(),
			datetimes : new Date()
		};
	$.ajax({
		url:"monitorCenter/getGpsInfos.action",
		type:"POST",
		dataType:"json",
		data:jsonParams,
		success:function(msg){
			var pos = new Array(); // 轨迹点数组
	        var xy = msg[0];
	        if(typeof(xy)!='undefined'){
		         if(!firstPoint){
			    	 pos.push(lastPoint);
			     }
		     	var ggPoint = new BMap.Point(xy.lon, xy.lat);
		        BMap.Convertor.translate(ggPoint, 0, function(point){
		     	   xy.sHlon=point.lng;
		     	   xy.sHlat=point.lat;
		     	   MakerNewOrUpdateCar(xy);
		        });
		        posline=pos;
		        BMap.Convertor.translate(ggPoint, 0, function(point){
			     	  drawline(point);
			   });
		        firstPoint=false;
	        }else{
	        	alert("此车无最新轨迹数据，不能单车跟踪!");
	        }
	   }
		
	});
		setTimeout("playTrack()",10000);
}
function drawline(xypoint)
{
	 posline.push(xypoint);
     lastPoint=xypoint;
     var isbound = BMapLib.GeoUtils.isPointInRect(xypoint, maplet.getBounds());
     if(isbound == false) 
     {
    	 maplet.setCenter(xypoint);
     }
  // 画轨迹线
	 try{
			var pline =new BMap.Polyline(posline,"#330099",2);
			maplet.addOverlay(pline);
	}catch(e){}
		if (firstPoint) {
			maplet.centerAndZoom(posline[0],15);
	}
	
}

function MakerNewOrUpdateCar(obCar){
	car = new MyObject(obCar.vehicleId);
	if (!carHashMap.containsKey(car)) {
		MakerCar(obCar);
	}else{
		var newMarker = carHashMap.get(car);
		var winMarker=winHashMap.get(car);
		var oldPoint = newMarker.getPosition();
		
		if((oldPoint.lat!=obCar.sHlat) || (oldPoint.lng!=obCar.sHlon)){
			updateCurrentCar(newMarker,winMarker,obCar);
		}	
		newMarker = null;
		winMarker=null;
		oldPoint = null;
	}
	car = null;
}

/**
 * 刷新当前跟踪的车辆
 * 
 * @param currentCar
 * @param obCar
 */
function updateCurrentCar(currentCarMarker,winMarker,obCar){
	var point = new BMap.Point(obCar.sHlon, obCar.sHlat);
	var icon = currentCarMarker.getIcon();
	var oldIconUrl = getCarImage(obCar);
	if(icon.imageUrl!=oldIconUrl){
		icon.setImageUrl(oldIconUrl);
		currentCarMarker.setIcon(icon);
	}
	
	currentCarMarker.openInfoWindow(winMarker, point);   
	currentCarMarker.setPosition(point);
}
function getCarImage(obCar){
	var state = 0;
	var src="";
	var head = getHead(obCar.hd);
	if (obCar.sd > 0) {
		state = 1;
	}
	if(obCar.alarmState!='当前没有报警'){
		state=3;
	}
	if(!obCar.onLine){
		state=2;
	}
	
//	alert('laile'+"类型："+state);
	
	if (state == 0) {
		src = "imgs/car/carYellow" + head + ".gif";
	} else if (state == 1) {
		src = "imgs/car/car" + head + ".gif";
	} else if (state == 2) {
		src = "imgs/car/carBlue" + head + ".gif";
	} else {
		src = "imgs/car/red" + head + ".gif";
	}	
	
//	if (state == 0) {
//		src = "imgs/car/car" + head + ".gif";
//	} else if (state == 1) {
//		src = "imgs/car/car" + head + ".gif";
//	} else if (state == 2) {
//		src = "imgs/car/carYellow" + head + ".gif";
//	} else {
//		src = "imgs/car/red" + head + ".gif";
//	}	
	return src;
}


//显示标注
function showPoint(){
		 var jsonParams = {
					datetimes : new Date()
		 };
		 $.post("customMapPoint/getEntCustomMapByUserList.action", jsonParams, function(data) {
			 if (data != 'false') {
					var arrlist = data ;
					for ( var a = 0; a < arrlist.length; a++) {
						var id =arrlist[a].id;
						var name =arrlist[a].name;
						var LonLat =arrlist[a].LonLat;
						var CustomType =arrlist[a].CustomType;
						var Radius =arrlist[a].Radius;
						var imageURL =arrlist[a].imageURL;
						var nameType=arrlist[a].nameType;
						if(CustomType=="1"){
					    	var LonLats=LonLat.split(",");
							var lng=LonLats[0];
							var lat=LonLats[1];
							addMarkerList(lng,lat,imageURL,id,name,nameType);
					    }else{
					    	showAreaList(id,name,LonLat,CustomType,Radius);
					    }
					}
			  }
		 });
	 }	


function addMarkerList(lng,lat,imageURL,id,name){  // 创建图标对象    
	var point = new BMap.Point(lng,lat); 
	
	var basePath = getRootPath();
	var url= basePath+imageURL;
	var myIcon = new BMap.Icon(url, new BMap.Size(32, 42), {     
		// 指定定位位置。    
		// 当标注显示在地图上时，其所指向的地理位置距离图标左上     
		// 角各偏移10像素和25像素。您可以看到在本例中该位置即是    
	   // 图标中央下端的尖角位置。     
	   offset: new BMap.Size(10, 25),     
	   // 设置图片偏移。    
	   // 当您需要从一幅较大的图片中截取某部分作为标注图标时，您    
	   // 需要指定大图的偏移位置，此做法与css sprites技术类似。     
	   imageOffset: new BMap.Size(0, 0 * 25)   // 设置图片偏移     
	 });  
	
	// 创建标注对象并添加到地图    
	 var marker = new BMap.Marker(point, {icon: myIcon});     
	 maplet.addOverlay(marker); 
	 
	 var label = new BMap.Label(name,{offset:new BMap.Size(10,-10)});
		label.setStyle({
         borderColor:"#808080",
         color:"#333",
         cursor:"pointer"
		});
	 marker.setLabel(label);
    
	pointHashMap.put(id,marker);

}

function showAreaList(id,name,LonLat,CustomType,Radius){
	 var pointList = LonLat.split(',');
    var pointArray = [];
    var i = 0;
    while (i < pointList.length) {
        pointArray.push(new BMap.Point(pointList[i], pointList[i + 1]));
        i += 2;
    }
	var overLay;
	switch (CustomType) {
   case 2:
   	overLay = new BMap.Circle(pointArray[0], Radius, styleOptions);
	    addLabelList(pointArray[0],id,name);
       break;
   case 4:
   	overLay = new BMap.Polygon(pointArray, styleOptions);
   	addLabelList(pointArray[0],id,name);
       break;
   case 5:
   	overLay = new BMap.Polygon(pointArray, styleOptions);
   	addLabelList(pointArray[0],id,name);
       break;
   }
	 maplet.addOverlay(overLay);
	 pointHashMap.put(id,overLay);
}

function addLabelList(point,id,name){
	var opts = {
			  position : point,    // 指定文本标注所在的地理位置
			  offset   : new BMap.Size(8, 8)    //设置文本偏移量
			};
	var label = new BMap.Label(name, opts);  // 创建文本标注对象
	label.setStyle({
		 borderColor:"#808080",
		 color:"#333",
		 fontSize : "12px",
		 height : "20px",
		 lineHeight : "20px",
		 fontFamily:"微软雅黑"
	 });
	maplet.addOverlay(label); 
   
   lableHashMap.put(id,label);
}


function getRootPath(){    
	//获取当前网址，如： http://192.168.2.133:8080/bubiaoQdn/sys/vehicle/vehicleModifyHistory.jsp    
	var curWwwPath=window.document.location.href;    
	//获取主机地址之后的目录，如：bubiaoQdn/sys/vehicle/vehicleModifyHistory.jsp
	var pathName=window.document.location.pathname;   
	var pos=curWwwPath.indexOf(pathName);    
	//获取主机地址，如：http://192.168.2.133:8080 
	var localhostPaht=curWwwPath.substring(0,pos);    
	//获取带"/"的项目名，如：/bubiaoQdn    
	var projectName=pathName.substring(0,pathName.substr(1).indexOf('/')+1);    
	return(localhostPaht+projectName);
	
}



/***关闭单车跟踪的弹出信息框***/
function closTitleWin(){
	if(vehicleId){//不为空
		car = new MyObject(vehicleId);
		var newMarker = carHashMap.get(car);//图片标注对象
		newMarker.closeInfoWindow();//关闭弹出窗口
	}
}










