var maplet= null;   // 地图全局变量
var vehicleId ="";// 手机号
var car = new MyObject('0'); //
var carText = new MyObject('0'); //
var carHashMap = new HashMap();
var winHashMap = new HashMap();
function load(vehicle) {
	vehicleId = vehicle; // 接收页面传来的参数
	$('#map').css("width", getMapWidth() + "px");
	$('#map').css("height", getMapHeight()+ "px");
	maplet = new BMap.Map("map");            // 创建Map实例
	var point = new BMap.Point(116.39885,39.96571);    // 创建点坐标
	maplet.centerAndZoom(point,5);                     // 初始化地图,设置中心点坐标和地图级别。
	maplet.enableScrollWheelZoom();                            //启用滚轮放大缩小
	maplet.addControl(new BMap.NavigationControl());
	maplet.addControl(new BMap.ScaleControl());  
	maplet.addControl(new BMap.OverviewMapControl());   
	playTrack();
}


function getHead(head) {
	head=head*2;
	if ((head >= 0 && head < 22) || (head >= 336)){
		return 3;
		}else if (head >=22 && head <66){
			return 7;
		}else if (head >=66 && head <112){
			return 1;
	    }else if (head >=112 && head <=156){
			return 8;
	    }else if (head >=156 && head <202){
			return 4;
	    }else if (head >=202 && head <= 246){
			return 5;
	    }else if (head >=246 && head <292){
			return 2;
	    }else if (head >=292 && head <336){
			return 6;
	    }
}

function getHeadDes(head) {
	head=head*2;
	if ((head >= 0 && head < 22)||(head >= 336)){
		return "北向";
	}else if(head >= 22 && head <66){
		return "东北向";
	}else if(head>=66&&head<112){
		return "东向";
	}else if(head>=112&&head<156){
		return "东南向";
	}else if(head>=156&&head<202){
		return "南向";
	}else if(head>=202&&head<246){
		return "西南向";
	}else if(head>=246&&head<292){
		return "西向";
	}else if(head>=292&&head<336){
		return "西北向";
	}
}

function getMapWidth() {
	var width;
	if (window.innerWidth)
		width = window.innerWidth;
	else
		width = document.body.offsetWidth;

	return width;
}
function getMapHeight() {
	var height;
	height = document.body.clientHeight;
	return height;
}

function createInfoWindow(obCar) {
	var div = '<div><table width="280" border="0" cellspacing="0" cellpadding="0"><tr bgcolor="#e6eaea">';
	div +=  '<tr colspan="2" height="30">' + obCar.gs + '</td></tr>' 
	    + '<tr><td height="18">速度：' + obCar.sd + '公里/小时</td>' + '<td >方向：' + getHeadDes(obCar.hd) + '</td></tr>'
	  //  + '<tr bgcolor="#e6eaea"><td height="18">经度：' + obCar.lon+ '</td>' + '<td >纬度：' + obCar.lat + '</td></tr>' 
	   + '<tr bgcolor="#e6eaea"><td height="18">所属行业：' + obCar.kindName+ '</td>' + '<td >所属业户：' + obCar.workunitName + '</td></tr>' 
	   + '<tr ><td height="18" colspan="2" >电子运单：' + obCar.bill+ '</td></tr>' 
	    +'<tr bgcolor="#e6eaea"><td><a href="javascript:void(0)" onclick=getDriverMessage("'+obCar.vehicleId+ '")> 查看司机信息</a></td><td><a href="javascript:void(0)" onclick=getLocationInfo2("' + obCar.sim + '","' + obCar.lon + '","' + obCar.lat + '")>查看地址</a></td></tr>'
	   +'<tr ><td colspan="2"  height="25" id="message">&nbsp;</td></tr></table></div>';
	return div;
}




//弹出窗口,取中文地址
function getLocationInfo2(sim,lon,lat) {
	$("#locationInfo").html('<img src="imgs/load.gif" />正在加载数据......');
	  var url="monitorCenter/getAddressRepeat.action";
	   var param={
    		 date:new Date(),
             lnglat:lon+","+lat	 
             }
	  url = encodeURI(url); 
	 	$.ajax({
		url:url,
		type:"POST",
		dataType:"json",
		data: param,
		success:function(data){
		try{  
			   if(data.status=="ok"){
					$("#message").html(data.result.address);
				}else{
					$("#message").html(data.result.error);
				}
	     }catch(exception){
	    	 $("#message").html('服务器忙,请稍后再试!');
	   }
		
	} 
		
	});
}
/**
 * 获取车辆最新驾驶员信息
 * @param {} vehicleId
 */
function getDriverMessage(vehicleId){
$("#message").html('<img src="imgs/load.gif" />正在加载数据......');
   var jsonParams = {
		vehicleId : vehicleId,
		de : new Date()
	};
	
	 	$.ajax({
		url:"monitorCenter/getNewestDriverMessage.action",
		type:"POST",
		data: jsonParams,
		success: function(data){
		    if (data != ''&&data!='null'&& data!=null) {
		    	var name=data.name;
		    	var identityCard=data.identityCard;
		    	var drivingLicence=data.drivingLicence;
		    	var workCertificate=data.workCertificate;
			    var message="姓名:"+data.name;
			    if(identityCard!=''){
			     message+="&nbsp;身份证:"+identityCard;
			    }
			    if(drivingLicence!=''){
			    message+="&nbsp;驾驶证号码:"+drivingLicence;
			    	
			    }
			     if(workCertificate!=''){
			    message+="&nbsp;从业资格证号:"+workCertificate;
			    }
		   $("#message").html(message);
		}else{
			$("#message").html("当前没有司机信息");
		  }
		}
		
	});
	
} 
// 删车
function oneCar(carsim) {
	car = new MyObject(carsim);	
	var newMarker = carHashMap.get(car);	
	
	// 清空地图图标
	if(newMarker!=null){
		maplet.removeOverlay(newMarker);// 删除车
	}
	// 清空HashMap
	carHashMap.remove(car); // 删除车
}


// 定位车辆
function MakerCar(obCar, tableFlag) {
	var state = 0;
	var head = getHead(obCar.hd);
	if (obCar.sd > 0) {
		state = 1;
	}
	car = new MyObject(obCar.vehicleId);
	var IconPath;
	var IconInfo;
	var icon;
	var w;
	var h;
	var src;

	var newMarker = "";
	var textMarker = "";
	var infoWindow="";
	try {
		if (!carHashMap.containsKey(car)) {
			if (tableFlag) {
				add_tables(obCar);
			}
		} else {
			oneCar(obCar.vehicleId);
			if (tableFlag) {
				updatetable(obCar);
			}
		}
		if (state == 0) {
			src = "imgs/car/carYellow" + head + ".gif";
		} else if (state == 1) {
			src = "imgs/car/car" + head + ".gif";
		} else if (state == 2) {
			src = "imgs/car/carBlue" + head + ".gif";
		} else {
			src = "imgs/car/red" + head + ".gif";
		}
		try {
			if (head == 1 || head == 2) {
				w = 20;
				h = 20;
				icon = new BMap.Icon(src, new BMap.Size(w,h), {anchor: new BMap.Size(10,10)});
			} else if (head == 3 || head == 4) {
				w = 20;
				h = 20;
				icon = new BMap.Icon(src, new BMap.Size(w,h), {anchor: new BMap.Size(10,10)});
				
			} else {
				w = 22;
				h = 22;
				icon = new BMap.Icon(src, new BMap.Size(w,h), {anchor: new BMap.Size(10,10)});
			}
		} catch (e) {

		}
		var point = new BMap.Point(obCar.sHlon, obCar.sHlat);
	
		var newObCar = new Object();
		var infowindow = createInfoWindow(obCar);
		newMarker= new BMap.Marker(point, {icon: icon});
		maplet.addOverlay(newMarker);
		var windowTitle = {title : '<span style="font-size:14px;color:#0A8021">'+obCar.no+'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>'+obCar.gt};
		infoWindow = new BMap.InfoWindow( createInfoWindow(obCar),windowTitle);  // 创建信息窗口对象  
		maplet.openInfoWindow(infoWindow, point);   
		setTimeout("getLocationInfo2("+obCar.sim+","+obCar.lon+","+obCar.lat+")",500);
	} catch (e) {
		newMarker = car;
	}
	carHashMap.put(car, newMarker);
	winHashMap.put(car, infoWindow);
	// 清空
	point = null;
	car = null;
	carMarker = null;

}

var lastPoint=null;
var firstPoint=true;
//播放轨迹
var posline = new Array(); 
function playTrack() {
	var jsonParams = {
			vehicleIdStr:vehicleId,
			mapType:parent.parent.mapFrame.getMapType(),
			datetimes : new Date()
		};
	$.ajax({
		url:"monitorCenter/getGpsInfos.action",
		type:"POST",
		dataType:"json",
		data:jsonParams,
		success:function(msg){
		var pos = new Array(); // 轨迹点数组
	         var xy = msg[0];
	         if(!firstPoint){
		    	 pos.push(lastPoint);
		     }
	     	var ggPoint = new BMap.Point(xy.sHlon, xy.sHlat);
	        BMap.Convertor.translate(ggPoint, 0, function(point){
	     	   xy.sHlon=point.lng;
	     	   xy.sHlat=point.lat;
	     	   MakerNewOrUpdateCar(xy);
	        });
	        posline=pos;
	        BMap.Convertor.translate(ggPoint, 0, function(point){
		     	  drawline(point);
		   });
	        firstPoint=false;
	   }
		
	});
		setTimeout("playTrack()",10000);
}
function drawline(xypoint)
{
	 posline.push(xypoint);
     lastPoint=xypoint;
     var isbound = BMapLib.GeoUtils.isPointInRect(xypoint, maplet.getBounds());
     if(isbound == false) 
     {
    	 maplet.setCenter(xypoint);
     }
  // 画轨迹线
	 try{
			var pline =new BMap.Polyline(posline,"#330099",2);
			maplet.addOverlay(pline);
	}catch(e){}
		if (firstPoint) {
			maplet.centerAndZoom(posline[0],15);
	}
	
}

function MakerNewOrUpdateCar(obCar){
	car = new MyObject(obCar.vehicleId);
	if (!carHashMap.containsKey(car)) {
		MakerCar(obCar);
	}else{
		var newMarker = carHashMap.get(car);
		var winMarker=winHashMap.get(car);
		var oldPoint = newMarker.getPosition();
		if((oldPoint.lat!=obCar.sHlat) || (oldPoint.lng!=obCar.sHlon)){
			updateCurrentCar(newMarker,winMarker,obCar);
		}	
		newMarker = null;
		winMarker=null;
		oldPoint = null;
	}
	car = null;
}

/**
 * 刷新当前跟踪的车辆
 * 
 * @param currentCar
 * @param obCar
 */
function updateCurrentCar(currentCarMarker,winMarker,obCar){
	var point = new BMap.Point(obCar.sHlon, obCar.sHlat);
	var icon = currentCarMarker.getIcon();
	var oldIconUrl = getCarImage(obCar);
	if(icon.imageUrl!=oldIconUrl){
		icon.setImageUrl(oldIconUrl);
		currentCarMarker.setIcon(icon);
	}
	
	currentCarMarker.openInfoWindow(winMarker, point);   
	currentCarMarker.setPosition(point);
}
function getCarImage(obCar){
	var state = 0;
	var src="";
	var head = getHead(obCar.hd);
	if (obCar.sd > 0) {
		state = 1;
	}
	if (state == 0) {
		src = "imgs/car/car" + head + ".gif";
	} else if (state == 1) {
		src = "imgs/car/car" + head + ".gif";
	} else if (state == 2) {
		src = "imgs/car/carYellow" + head + ".gif";
	} else {
		src = "imgs/car/red" + head + ".gif";
	}	
	return src;
}

